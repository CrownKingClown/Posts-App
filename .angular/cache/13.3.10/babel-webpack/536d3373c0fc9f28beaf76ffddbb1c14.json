{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\roman\\\\Desktop\\\\Mean\\\\Posts-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\roman\\\\Desktop\\\\Mean\\\\Posts-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(http) {\n      _classCallCheck(this, AuthService);\n\n      this.http = http;\n      this.authStatusListener = new Subject();\n    }\n\n    _createClass(AuthService, [{\n      key: \"getToken\",\n      value: function getToken() {\n        return this.token;\n      }\n    }, {\n      key: \"getAuthStatusListener\",\n      value: function getAuthStatusListener() {\n        return this.authStatusListener.asObservable(); // This is a method that returns an observable\n      }\n    }, {\n      key: \"createUser\",\n      value: function createUser(email, password) {\n        var authData = {\n          email: email,\n          password: password\n        };\n        this.http.post(\"http://localhost:3000/api/user/signup\", authData).subscribe(function (response) {\n          console.log(response);\n        });\n      }\n    }, {\n      key: \"loginUser\",\n      value: function loginUser(email, password) {\n        var _this = this;\n\n        var authData = {\n          email: email,\n          password: password\n        };\n        this.http.post(\"http://localhost:3000/api/user/login\", authData).subscribe(function (response) {\n          var token = response.token;\n          _this.token = token;\n\n          _this.authStatusListener.next(true); //we are emitting a value of true, so any component that is listening to this observable will be notified\n\n        });\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: \"root\" // This is the default value\n\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}