{"ast":null,"code":"import { Observable, of } from \"rxjs\";\nexport var mimeType = function mimeType(control) {\n  if (typeof control.value === 'string') {\n    return of(null);\n  }\n\n  var file = control.value;\n  var fileReader = new FileReader();\n  var frObs = Observable.create(function (observer) {\n    fileReader.addEventListener(\"loadend\", function () {\n      var arr = new Uint8Array(fileReader.result).subarray(0, 4);\n      var header = \"\";\n      var isValid = false;\n\n      for (var i = 0; i < arr.length; i++) {\n        header += arr[i].toString(16);\n      }\n\n      switch (header) {\n        case \"89504e47\":\n          isValid = true;\n          break;\n\n        case \"ffd8ffe0\":\n        case \"ffd8ffe1\":\n        case \"ffd8ffe2\":\n        case \"ffd8ffe3\":\n        case \"ffd8ffe8\":\n          isValid = true;\n          break;\n\n        default:\n          isValid = false; // Or you can use the blob.type as fallback\n\n          break;\n      }\n\n      if (isValid) {\n        observer.next(null);\n      } else {\n        observer.next({\n          invalidMimeType: true\n        });\n      }\n\n      observer.complete();\n    });\n    fileReader.readAsArrayBuffer(file);\n  });\n  return frObs;\n};","map":null,"metadata":{},"sourceType":"module"}