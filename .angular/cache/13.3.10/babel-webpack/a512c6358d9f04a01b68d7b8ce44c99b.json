{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\roman\\\\Desktop\\\\Mean\\\\Posts-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\roman\\\\Desktop\\\\Mean\\\\Posts-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport { AuthService } from \"./auth.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport var AuthInterceptor = /*#__PURE__*/(function () {\n  var AuthInterceptor = /*#__PURE__*/function () {\n    function AuthInterceptor(authService) {\n      _classCallCheck(this, AuthInterceptor);\n\n      this.authService = authService;\n    } // This is a constructor that takes an argument of type AuthService\n\n\n    _createClass(AuthInterceptor, [{\n      key: \"intercept\",\n      value: function intercept(req, next) {\n        var authToken = this.authService.getToken(); // This is a variable that is assigned the value of the return value of the getToken() method of the authService object\n\n        var authRequest = req.clone({\n          headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\n        });\n        return next.handle(authRequest);\n      }\n    }]);\n\n    return AuthInterceptor;\n  }();\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}